<!doctype html><!--
        _..._
      .'     '.      _
     /    .-""-\   _/ \
   .-|   /:.   |  |   |
   |  \  |:.   /.-'-./
   | .-'-;:__.'    =/
   .' PORTFOLIUM .='
  /   _.  |    ;
 ;-.-'|    \   |
/   | \    _\  _\
\__/'._;.  ==' ==\
         \    \   |
         /    /   /
         /-._/-._/
         \   `\  \
          `-._/._/
-->
<html lang="en"> 
 <head> 
  <title pf-page-title>Portfolium Network: Showcase Your Skills in an ePortfolio</title> 
  <meta name="robots" content="all"> 
  <meta charset="utf-8"> 
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 
  <meta name="application-name" content="Portfolium Network"> 
  <meta name="copyright" content="© 2021 Instructure, Inc."> 
  <meta name="format-detection" content="telephone=no"> 
  <meta name="keywords" content="portfolium, student portfolio, eportfolio, electronic portfolio, student success, eportfolio examples, cocurricular transcripts, free eportfolio, career portfolio, digital credentials, badging, microcredentialing, pathways, e portfolio"> 
  <meta name="apple-itunes-app" content="app-id=949249802"> 
  <meta name="viewport" content="width=device-width,initial-scale=1,user-scalable=yes"> 
  <meta property="fb:app_id" content="501322116570266"> 
  <meta property="og:type" content="website"> 
  <meta property="og:url" content="https://portfolium.com/login"> 
  <meta property="og:title" content="Start your Portfolium"> 
  <meta property="og:image" content="https://cdn.portfolium.com/og/portfolium.jpg"> 
  <meta property="og:description" content="Don't tell people your dreams, show them what you're doing to reach them. Portfolium is a collaborative network of people showcasing their projects, skills, and experiences to employers."> 
  <meta property="og:site_name" content="Portfolium"> 
  <meta name="twitter:card" content="summary_large_image"> 
  <meta name="twitter:site" content="@PortfoliumHQ"> 
  <meta name="twitter:title" content="Start your Portfolium"> 
  <meta name="twitter:description" content="Don't tell people your dreams, show them what you're doing to reach them. Portfolium is a collaborative network of people showcasing their projects, skills, and experiences to employers."> 
  <meta name="twitter:url" content="https://portfolium.com/login"> 
  <meta name="twitter:image" content="https://portfolium1.cloudimg.io/s/crop/764x400/https://cdn.portfolium.com/og/portfolium.jpg"> 
  <meta name="author" content="Instructure, Inc."> 
  <meta name="description" content="Don't tell people your dreams, show them what you're doing to reach them. Portfolium is a collaborative network of people showcasing their projects, skills, and experiences to employers."> 
  <link rel="canonical" href=""> 
  <link rel="shortcut icon" href="https://portfolium.com/assets/images/favicons/favicon.png" type="image/png"> 
  <link rel="apple-touch-icon" sizes="57x57" href="https://portfolium.com/assets/images/favicons/apple-touch-icon-57x57.png" type="image/png"> 
  <link rel="apple-touch-icon" sizes="60x60" href="https://portfolium.com/assets/images/favicons/apple-touch-icon-60x60.png" type="image/png"> 
  <link rel="apple-touch-icon" sizes="72x72" href="https://portfolium.com/assets/images/favicons/apple-touch-icon-72x72.png" type="image/png"> 
  <link rel="apple-touch-icon" sizes="76x76" href="https://portfolium.com/assets/images/favicons/apple-touch-icon-76x76.png" type="image/png"> 
  <link rel="apple-touch-icon" sizes="114x114" href="https://portfolium.com/assets/images/favicons/apple-touch-icon-114x114.png" type="image/png"> 
  <link rel="apple-touch-icon" sizes="120x120" href="https://portfolium.com/assets/images/favicons/apple-touch-icon-120x120.png" type="image/png"> 
  <link rel="apple-touch-icon" sizes="144x144" href="https://portfolium.com/assets/images/favicons/apple-touch-icon-144x144.png" type="image/png"> 
  <link rel="apple-touch-icon" sizes="152x152" href="https://portfolium.com/assets/images/favicons/apple-touch-icon-152x152.png" type="image/png"> 
  <link rel="apple-touch-icon" sizes="167x167" href="https://portfolium.com/assets/images/favicons/apple-touch-icon-167x167.png" type="image/png"> 
  <link rel="apple-touch-icon" sizes="180x180" href="https://portfolium.com/assets/images/favicons/apple-touch-icon-180x180.png" type="image/png"> 
  <link rel="icon" sizes="16x16" href="https://portfolium.com/assets/images/favicons/favicon-16x16.png" type="image/png"> 
  <link rel="icon" sizes="32x32" href="https://portfolium.com/assets/images/favicons/favicon-32x32.png" type="image/png"> 
  <link rel="icon" sizes="96x96" href="https://portfolium.com/assets/images/favicons/favicon-96x96.png" type="image/png"> 
  <link rel="icon" sizes="128x128" href="https://portfolium.com/assets/images/favicons/favicon-128x128.png" type="image/png"> 
  <link rel="icon" sizes="160x160" href="https://portfolium.com/assets/images/favicons/favicon-160x160.png" type="image/png"> 
  <link rel="icon" sizes="192x192" href="https://portfolium.com/assets/images/favicons/favicon-192x192.png" type="image/png"> 
  <style type="text/css" media="screen">
    @font-face {
        font-family: proxima-nova;
        src: url('/assets/fonts/proxima_nova/700.woff2') format('woff2');
        font-weight: 700;
        font-style: normal;
    }

    @font-face {
        font-family: proxima-nova;
        src: url('/assets/fonts/proxima_nova/700-i.woff2') format('woff2');
        font-weight: 700;
        font-style: italic;
    }

    @font-face {
        font-family: proxima-nova;
        src: url('/assets/fonts/proxima_nova/600.woff2') format('woff2');
        font-weight: 600;
        font-style: normal;
    }

    @font-face {
        font-family: proxima-nova;
        src: url('/assets/fonts/proxima_nova/400.woff2') format('woff2');
        font-weight: 400;
        font-style: normal;
    }

    @font-face {
        font-family: proxima-nova;
        src: url('/assets/fonts/proxima_nova/300.woff2') format('woff2');
        font-weight: 300;
        font-style: normal;
    }
</style> 
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" type="text/css"> 
  <link href="https://portfolium.com/assets/build/ng-material-layout-attributes-b5fccb0f398a38edd98d.css" rel="stylesheet" type="text/css"> 
  <link href="https://portfolium.com/assets/build/common-b5fccb0f398a38edd98d.css" rel="stylesheet" type="text/css"> 
  <script>window.Stripe = {};</script> 
  <script>
    window.Portfolium = {
        current_user: false,
        isMobile: false,
        environment: {"APP_DOMAIN":"portfolium.com","PF_ENVIRONMENT":"production","PF_BASE_URL":"https:\/\/portfolium.com\/","PF_API_URL":"https:\/\/api.portfolium.com","PF_EDU_URL":"https:\/\/edu.portfolium.com\/","PF_CDN_URL":"https:\/\/cdn.portfolium.com","PF_ASSETS_URL":"https:\/\/portfolium.com\/assets\/","PF_CSRF_WEB_COOKIE_NAME":"pf-web-csrf","PF_COOKIE_DOMAIN":".portfolium.com","PF_FILESTACK_KEY":"AMwSA34ueQCiU3rNZQJW3z","PF_FILESTACK_CNAME":"fs.portfolium.com","PF_FILESTACK_REGION":"us-east-1","PF_S3_EXTERNAL_BUCKET":"inst-port-cdn-public-us-east-1","PF_S3_INTERNAL_BUCKET":"inst-port-internal-us-east-1","PF_STRIPE_KEY":"pk_live_CGoyrIZ2rA4g4RSmRJUyoZpP","PF_GOOGLE_MAPS_KEY":"AIzaSyAhAJCeq5kS7kpm3lLgovso7hcCyL3XOHk","PF_FACEBOOK_CLIENT_ID":"501322116570266","PF_LINKEDIN_CLIENT_ID":"7594zl17t0qfz5","PF_TWITTER_CONSUMER_KEY":"X8cPNtjfqatRtzrpJs03xZ9lU","PF_GOOGLE_CLIENT_ID":"1079541345695-3mmlrslivlf3m40if9n2f8hglqu8o0ka.apps.googleusercontent.com","PF_RECAPTCHA_CLIENT_ID":"6LegOrQUAAAAAI5i0F33g_EZOFr_GZ0PtrXM0Pbu","PF_STRIP_EXIF_METADATA_WORKFLOW":"25069f4f-139b-4cd2-a0cb-94397cc7ad9e","AWS_REGION":"us-east-1"},
        flashData: {
            growl: false,
            alert: false,
        },
                    isSinglePageApp: true,
                trackPageName: '',
    };
</script> <!-- Translation Helpers --> 
  <script>
    window.ZAB = {
        'version': '0.97B',
        'hasInitied': false,
        'currentLanguage': 'en',
        'settings': {
            'forceLocalStorageValue': false,
            'keys': {
                'language': 'ZAB-LANGUAGE-CODE',
                'debugOverride': 'ZAB-DEBUG-ENABLED',
                'forceLocalStorage': 'ZAB-FORCE-LOCAL-STORAGE',
            },
            'availableTranslations': [
                {"name": "English (US)", "code": "en", "activated": true},
                {"name": "English (Australia)", "code": "en-AU", "activated": false},
                {"name": "English (United Kingdom)", "code": "en-GB", "activated": false},
                {"name": "Español", "code": "es", "activated": false},
                {"name": "Deutsch", "code": "de-DE", "activated": false},
                {"name": "Français", "code": "fr-FR", "activated": false},
                {"name": "Norsk (Bokmål)", "code": "nb-NO", "activated": false},
                {"name": "Português", "code": "pt-PT", "activated": false},
            ],
        },
        'localStorage': window.localStorage,
        'debug': {
            'enabled': false,
            'styles': {
                'NOT_FOUND': 'background-color: red !important; display: initial !important;',
                'FOUND': 'background-color: green !important; display: initial !important;',
            },
            'missedTranslations': []
        },

        '_d': function(msg) {
            if (this.debug.enabled) {
                console.log('ZAB-', msg);
            }
        },

        'init': async function() {
            this.getOverrides();
            this._d(this.version + ' init');
            let foundLanguage = false;

            // check session
            let currentSession = this.checkCurrentSession();
            if (currentSession) {
                foundLanguage = true;
                this.currentLanguage = currentSession;
                this._d('loaded language setting from session -> ' + currentSession);
            }

            // check local storage
            if (!foundLanguage || this.settings.forceLocalStorageValue) {
                try {
                    let local = this.checkLocalStorage();
                    if (local.success) {
                        const prefix = this.settings.forceLocalStorageValue ? '(forced) ' : '';
                        this._d(prefix + 'loaded language setting from local storage -> ' + local.key);
                        this.currentLanguage = local.key;
                    }
                } catch (e) {
                    console.warn('ZAB: Issue with LocalStorage: ' + e);
                }
            }

            try {
                this.translations = this.loadedTranslations[this.currentLanguage];
                this._d('Translations loaded: ' + this.currentLanguage);
                this.hasInitied = true;
            } catch (e) {
                console.error('ZAB: Unable to load language for: ' + this.currentLanguage + ' ' + e);
                this.translations = {};
            }
        },

        'setLanguage': function(languageCode) {
            try {
                this.localStorage.setItem(this.settings.keys.language, languageCode);
                return true;
            } catch (e) {
                this._d("Not able to switch to '"+ languageCode +"' for translations translations...", e);
            }
            return false;
        },

        'getBoolean': function(oneOrZero) {
            return (oneOrZero == '1');
        },

        'getOverrides': function() {
            if (!this.localStorage) {
                return;
            }

            const debugOverride = this.localStorage.getItem(this.settings.keys.debugOverride);
            if (debugOverride) {
                this.debug.enabled = this.getBoolean(debugOverride);
            }

            const forceLocalStorage = this.localStorage.getItem(this.settings.keys.forceLocalStorage);
            if (forceLocalStorage) {
                this.settings.forceLocalStorageValue = this.getBoolean(forceLocalStorage);
            }
        },

        'checkCurrentSession': function() {
            const currentUser = window.Portfolium.current_user;
            if (currentUser && currentUser.language) {
                return currentUser.language;
            }

            return false;
        },

        'checkLocalStorage': function() {
            let returnVal = {
                'success': false,
                'key': '',
            };

            if (!this.localStorage) {
                return returnVal;
            }

            try {
                let lang = this.localStorage.getItem(this.settings.keys.language);

                if (!lang) {
                    return returnVal;
                }

                returnVal.key = lang;
                returnVal.success = true;
            } catch (e) {
                console.error('ZAB: Unable to get local storage');
            }

            return returnVal;
        },

        'translate': function(key) {
            if (key == "" || !key)
                return "";

            let foundPrefix = this.debug.enabled ? 'FF-' : '';
            let notFoundPrefix = this.debug.enabled ? 'NF-' : '';
            let trimmedText = key.trim();

            if (!this.translations[trimmedText]) {
                if (this.debug.enabled) {
                    if (this.debug.missedTranslations.indexOf(trimmedText) == -1)
                        this.debug.missedTranslations.push(trimmedText);
                    console.warn('ZAB- (Missed Translation): "', trimmedText, '"');
                }

                return {
                    'code': 'NOT_FOUND',
                    'text': notFoundPrefix + key,
                };
            }

            return {
                'code': 'FOUND',
                'text': foundPrefix + this.translations[trimmedText],
            };
        },

        'getMissedTranslationsAsString': function() {
            let missed = "";
            for (var i = 0; i < this.debug.missedTranslations.length; i++) {
                missed += "\n" + '"' + this.debug.missedTranslations[i] + '":"' + this.debug.missedTranslations[i] + '",';
            }
            console.log(missed);
        },

        'getMissedTranslations': function() {
            return this.debug.missedTranslations;
        },


        'get': function(text) {
            return this.translate(text);
        },

        'translations' : {}
    };
</script> 
  <script src="https://portfolium.com/assets/js/zab-translations.web.js"></script> 
  <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
        ga('create', 'UA-52490308-1', 'auto');
        ga('require', 'displayfeatures');
                    ga('send', 'pageview');
            </script> 
  <base href="/"> 
  <script async src="/cdn-cgi/bm/cv/669835187/api.js"></script>
 </head> 
 <body class="c_auth a_wizard pf-ng-app windows chrome chrome-79 visitor desktop md-layout-css" md-layout-css layout="row" ng-class="appClass"> 
  <div class="a11y-navigation for-screenreader" aria-hidden="false"> <md-button pf-skip-to-landmark pf-skip-to="nav" class="md-button md-raised">
    Skip to Sidebar
   </md-button> <md-button pf-skip-to-landmark pf-skip-to="main" pf-skip-to-backup="#pf-content" class="md-button md-raised">
    Skip to Content
   </md-button> 
  </div> <pf-gdpr-snackbar></pf-gdpr-snackbar> <ui-view class="pf-ng-app-content" name="layout" layout="column" flex> 
  </ui-view> 
  <script type="text/ng-template" id="template/components/footer/template/footer.html">
    <div class="pf-footer">
    <div class="pf-container pf-footer-container">
        <div class="pf-footer__inner">
            <div class="pf-footer-main">
                <div class="pf-footer-main__section">
                    <div class="pf-footer-main__section-header">
                        Solutions
                    </div>
                    <a href="https://www.instructure.com/canvas/portfolium/folio-management" target="_blank">ePortfolio Management</a>                    <a href="https://www.instructure.com/canvas/portfolium/ou